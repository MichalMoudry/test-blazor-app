@layout AppLayout
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime IJSRuntime
@page "/formcapture/apps/{appID}/addtemplate"

<AuthorizeView Roles="Admin, Workflow admin">
    <Authorized>
        <h3>Add a new template</h3>

        <hr />

        <div class="row">
            <div class="col-md">
                <div class="card">
                    <div class="card-header">
                        <h4>Template image</h4>
                    </div>

                    <div class="card-body">
                        <div class="template-canvas">
                            <img id="template-preview-image" draggable="false" src="@fileContent" />
                        </div>
                    </div>

                    <div class="card-footer">
                        <input type="file" @onchange="FileUpload" id="template-input" />
                    </div>
                </div>
            </div>

            <div class="col-md">
                <div class="card">
                    <div class="card-header">
                        <h4>Fields</h4>
                    </div>

                    <div class="card-body">
                        <div id="field-list">

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-3 mb-3 bottom-row">
            <button class="btn btn-success" disabled="@SubmitButtonDisabledAttribute" @onclick="Confirm">
                <span class="oi oi-check"></span> Submit
            </button>
        </div>

        @code
        {
            [Parameter]
            public string AppID { get; set; }

            private Template template = new Template() { ID = Guid.NewGuid().ToString() };

            private string fileContent;

            private bool isSubmitButtonDisabled = false;

            private string SubmitButtonDisabledAttribute => isSubmitButtonDisabled ? "disabled" : null;

            private async Task FileUpload()
            {
                isSubmitButtonDisabled = true;
                fileContent = "data:image/png;base64,";
                fileContent += await IJSRuntime.InvokeAsync<string>("getFileData", "template-input");
                template.Image = System.Text.Encoding.UTF8.GetBytes(fileContent);
                template.AppID = this.AppID;
                template.Added = DateTime.Now;
                template.Updated = template.Added;
                isSubmitButtonDisabled = false;
            }

            private async Task Confirm()
            {
                string imageDimensions = await IJSRuntime.InvokeAsync<string>("getImageProperties", "template-preview-image");
                string[] imageDimensionsSplit = imageDimensions.Split("|");
                template.Xdimension = Convert.ToInt32(imageDimensionsSplit[0]);
                template.Ydimension = Convert.ToInt32(imageDimensionsSplit[1]);
                HttpResponseMessage httpResponseMessage = await HttpClient.PostAsJsonAsync("api/templates/add", template);
                if (httpResponseMessage.IsSuccessStatusCode)
                {
                    NavigationManager.NavigateTo($"/formcapture/apps/{AppID}");
                }
            }

            protected override void OnInitialized()
            {
                HttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", ClaimsHelper.Instance().GetToken());
                base.OnInitialized();
            }
        }
    </Authorized>

    <NotAuthorized>
        <h3>You are not authorized to be here.</h3>
    </NotAuthorized>
</AuthorizeView>