@layout AppLayout
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime IJSRuntime
@page "/formcapture/apps/{ApplicationID}/startqueue"

<AuthorizeView Roles="Admin, Workflow admin">
    <Authorized>
        <h3>Start a new queue</h3>

        <hr />

        <h4><span class="oi oi-project"></span> Workflow</h4>

        <select class="form-control">
            @if (appWorkflows != null)
            {
                @foreach (var workflow in appWorkflows)
                {
                    <option value="@workflow.ID">@workflow.ID</option>
                }
            }
        </select>

        @code
        {
            [Parameter]
            public string ApplicationID { get; set; }

            private List<CaptureAppWorkflows> appWorkflows;

            protected override async Task OnInitializedAsync()
            {
                HttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", ClaimsHelper.Instance().GetToken());
                var getWorkflowsMessage = await HttpClient.GetAsync($"/api/captureappworkflows/{ApplicationID}");
                if (getWorkflowsMessage.IsSuccessStatusCode)
                {
                    appWorkflows = JsonConvert.DeserializeObject<List<CaptureAppWorkflows>>(await getWorkflowsMessage.Content.ReadAsStringAsync());
                }
            }
        }
    </Authorized>

    <NotAuthorized>
        <h3>You are not authorized to be here.</h3>
    </NotAuthorized>
</AuthorizeView>