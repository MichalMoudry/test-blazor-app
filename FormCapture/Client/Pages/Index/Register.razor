@layout MainLayout
@page "/register"
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<h3><span class="oi oi-person"></span> Register</h3>

<div class="form-card">
    <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" @bind-value="model.Email" placeholder="Enter your email..." class="form-control" id="email" name="email" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <input type="password" @bind-value="model.Password" placeholder="Enter your password..." class="form-control" id="password" name="password" />
    </div>

    <div class="form-group">
        <label for="confirm-password">Confirm password:</label>
        <input type="password" @bind-value="model.ConfirmationPassword" placeholder="Confirm your password..." class="form-control" id="confirm-password" name="confirm-password" />
    </div>

    <div class="form-group">
        <label>Account role:</label>
        <select class="form-control" @bind="accountRole">
            <option value="Admin">Admin</option>
            <option value="User">User</option>
        </select>
    </div>

    <button @onclick="SubmitForm" class="btn btn-primary">Submit</button>

    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary @LoadingIndicatorCssClass" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
</div>

<div class="alert alert-danger form-alert @FormAlertCssClass" role="alert">
    Registration form wasn't properly completed. Or user is already registered.
</div>

@code
{
    private RegistrationModel model = new RegistrationModel();

    private string accountRole;

    private bool isLoadingIndicatorHidden = true;

    private bool isFormAlertDisplayed = false;

    private string LoadingIndicatorCssClass => isLoadingIndicatorHidden ? "d-none" : null;

    private string FormAlertCssClass => isFormAlertDisplayed ? "d-block" : "d-none";

    private async Task SubmitForm()
    {
        isFormAlertDisplayed = false;
        if (!string.IsNullOrEmpty(model.Email) && !string.IsNullOrEmpty(model.Password) && !string.IsNullOrEmpty(model.ConfirmationPassword))
        {
            if (string.IsNullOrEmpty(accountRole))
            {
                accountRole = "Admin";
            }
            if (!string.IsNullOrEmpty(accountRole))
            {
                isLoadingIndicatorHidden = !isLoadingIndicatorHidden;
                model.Role = accountRole;
                bool res = await AuthenticationService.RegisterUser(model);
                if (res)
                {
                    NavigationManager.NavigateTo("/login");
                }
                else
                {
                    isFormAlertDisplayed = true;
                }
                isLoadingIndicatorHidden = !isLoadingIndicatorHidden;
            }
        }
        else
        {
            isFormAlertDisplayed = true;
        }
    }
}